// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String      @id @default(uuid())
  email     String      @unique
  name      String?
  password  String
  roles     Role
  disabled  Boolean     @default(false)
  isLoggedIn Boolean    @default(false)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  tokens    UserToken[]
  loginLogs LoginLog[]
}

model UserToken {
  id        String   @id @default(uuid()) // Use UUID for MySQL
  userId    String
  token     String
  disabled  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LoginLog {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  ipAddress String
  createdAt DateTime @default(now())
}


